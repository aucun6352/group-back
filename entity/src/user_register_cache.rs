//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use rocket::serde::{Serialize, Deserialize};
use sea_orm::entity::prelude::*;
use sea_orm_expand::QueryExpand;
use sea_orm_expand_derive::QueryExpand;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize, QueryExpand)]
#[sea_orm(table_name = "user_register_cache")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: u64,
    #[sea_orm(unique)]
    pub email: String,
    pub code: String,
    pub updated_at: TimeDateTime,
    pub created_at: TimeDateTime,
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl ActiveModelBehavior for ActiveModel {}
